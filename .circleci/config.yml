version: 2.1
orbs:
  codecov: codecov/codecov@4.2.0

default-job: &default-job
  working_directory: /tmp/toolpad
  resource_class: medium
  docker:
    - image: cimg/node:20.17
  environment:
    COREPACK_ENABLE_DOWNLOAD_PROMPT: '0'

default-context: &default-context
  context:
    - org-global

# CircleCI has disabled the cache across forks for security reasons.
# Following their official statement, it was a quick solution, they
# are working on providing this feature back with appropriate security measures.
# https://discuss.circleci.com/t/saving-cache-stopped-working-warning-skipping-this-step-disabled-in-configuration/24423/21
#
# restore_repo: &restore_repo
#   restore_cache:
#     key: v1-repo-{{ .Branch }}-{{ .Revision }}

commands:
  install_js:
    parameters:
      browsers:
        type: boolean
        default: false
        description: 'Set to true if you intend to use any browser (for example with playwright).'
    steps:
      - when:
          condition: << parameters.browsers >>
          steps:
            - run:
                name: Install pnpm package manager
                command: corepack enable
      - when:
          condition:
            not: << parameters.browsers >>
          steps:
            - run:
                name: Install pnpm package manager
                # See https://stackoverflow.com/a/73411601
                command: corepack enable --install-directory ~/bin
      - run:
          name: View install environment
          command: |
            node --version
            pnpm --version
      - run:
          name: Install js dependencies
          command: pnpm install

jobs:
  checkout:
    <<: *default-job
    steps:
      - checkout
      - install_js
      - run:
          name: Should not have any git not staged
          command: git add -A && git diff --exit-code --staged
      - run:
          name: Check for duplicated packages
          command: |
            # #default-branch-switch
            if [[ $(git diff --name-status master | grep -E 'pnpm-workspace\.yaml|pnpm-lock.yaml|package\.json') == "" ]];
            then
                echo "no changes to dependencies detected, skipping..."
            else
                pnpm dedupe --check
            fi

  test_lint:
    <<: *default-job
    steps:
      - checkout
      - install_js
      - run:
          name: Eslint
          command: pnpm eslint
      - run:
          name: Lint JSON
          command: pnpm jsonlint
      - run:
          name: Lint Markdown
          command: pnpm markdownlint
  test_types:
    <<: *default-job
    steps:
      - checkout
      - install_js
      - run:
          name: Check Typescript types
          command: pnpm check-types
          environment:
            NODE_OPTIONS: --max-old-space-size=3584
  test_static:
    <<: *default-job
    steps:
      - checkout
      - install_js
      - run:
          name: '`pnpm docs:typescript:formatted` changes committed?'
          command: |
            pnpm docs:typescript:formatted --disable-cache
            pnpm check-changes
      - run:
          name: '`pnpm prettier:all` changes committed?'
          command: |
            pnpm prettier:all
            pnpm check-changes
      - run:
          name: '`pnpm proptypes` changes committed?'
          command: |
            pnpm proptypes
            pnpm check-changes
      - run:
          name: '`pnpm jsonSchemas` changes committed?'
          command: |
            pnpm jsonSchemas
            pnpm check-changes
      - run:
          name: '`pnpm docs:build:api` changes committed?'
          command: |
            pnpm docs:build:api
            pnpm check-changes

  test_unit:
    <<: *default-job
    steps:
      - checkout
      - install_js:
          browsers: false
      - run:
          name: 'Build packages'
          command: pnpm release:build
          environment:
            NODE_OPTIONS: --max-old-space-size=3584
      - run:
          name: Tests fake browser
          command: pnpm test
      - codecov/upload

  test_unit_browser:
    <<: *default-job
    docker:
      - image: mcr.microsoft.com/playwright:v1.48.2-focal
        environment:
          NODE_ENV: test
    steps:
      - checkout
      - install_js:
          browsers: true
      - run:
          name: 'Build packages'
          command: pnpm release:build
          environment:
            NODE_OPTIONS: --max-old-space-size=3584
      - run:
          name: Tests real browser
          command: pnpm test:browser

  test_integration:
    <<: *default-job
    resource_class: 'large'
    parallelism: 2
    docker:
      - image: mcr.microsoft.com/playwright:v1.47.2-focal
        environment:
          NODE_ENV: test
          TOOLPAD_TEST_RETRIES: 1
    steps:
      - checkout
      - install_js:
          browsers: true
      - run:
          name: 'Build packages'
          command: pnpm release:build
          environment:
            NODE_OPTIONS: --max-old-space-size=3584
      - run:
          name: Tests real browser
          command: pnpm test:integration
      - store_test_results:
          path: test/test-results/junit.xml
      - run:
          name: Upload screenshots to Argos CI
          command: ARGOS_PARALLEL_TOTAL=${CIRCLE_NODE_TOTAL} pnpm test:argos
      - store_artifacts:
          path: test/test-results
          destination: playwright-test-results

  test_bundle_size_monitor:
    <<: *default-job
    steps:
      - checkout
      - install_js
      - run:
          name: Run danger on PRs
          command: pnpm danger ci --fail-on-errors
      # TODO test bundle size, similar to https://github.com/mui/base-ui/issues/201

workflows:
  pipeline:
    jobs:
      - checkout:
          <<: *default-context
      - test_lint:
          <<: *default-context
          requires:
            - checkout
      - test_types:
          <<: *default-context
          requires:
            - checkout
      - test_static:
          <<: *default-context
          requires:
            - checkout
      - test_unit:
          <<: *default-context
          requires:
            - checkout
      - test_unit_browser:
          <<: *default-context
          requires:
            - checkout
      - test_integration:
          <<: *default-context
          requires:
            - checkout
      - test_bundle_size_monitor:
          <<: *default-context
          requires:
            - checkout
